#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UmlGraph version 4.6 (http://www.spinellis.gr/sw/umlgraph)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	// org.opentox.aa.policy.Policies<Content>
	c991 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./Policies.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> Policies&lt;Content&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + Policies() </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	//org.opentox.aa.policy.Policies<Content> extends java.util.Hashtable<java.lang.String, Content>
	c1000:p -> c991:p [dir=back,arrowtail=empty];
	// java.util.Hashtable<K, V>
	c1000 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/javase/6/docs/api/java/util/Hashtable.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> Hashtable&lt;K, V&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + Hashtable(arg0 : int, arg1 : float) </td></tr>
			<tr><td align="left"> + Hashtable(arg0 : int) </td></tr>
			<tr><td align="left"> + Hashtable() </td></tr>
			<tr><td align="left"> + Hashtable(arg0 : Map&lt;?, ?&gt;) </td></tr>
			<tr><td align="left"> + size() : int </td></tr>
			<tr><td align="left"> + isEmpty() : boolean </td></tr>
			<tr><td align="left"> + keys() : Enumeration&lt;K&gt; </td></tr>
			<tr><td align="left"> + elements() : Enumeration&lt;V&gt; </td></tr>
			<tr><td align="left"> + contains(arg0 : Object) : boolean </td></tr>
			<tr><td align="left"> + containsValue(arg0 : Object) : boolean </td></tr>
			<tr><td align="left"> + containsKey(arg0 : Object) : boolean </td></tr>
			<tr><td align="left"> + get(arg0 : Object) : V </td></tr>
			<tr><td align="left"> # rehash() </td></tr>
			<tr><td align="left"> + put(arg0 : K, arg1 : V) : V </td></tr>
			<tr><td align="left"> + remove(arg0 : Object) : V </td></tr>
			<tr><td align="left"> + putAll(arg0 : Map&lt;?, ?&gt;) </td></tr>
			<tr><td align="left"> + clear() </td></tr>
			<tr><td align="left"> + clone() : Object </td></tr>
			<tr><td align="left"> + toString() : String </td></tr>
			<tr><td align="left"> + keySet() : Set&lt;K&gt; </td></tr>
			<tr><td align="left"> + entrySet() : Set&lt;Map.Entry&lt;K, V&gt;&gt; </td></tr>
			<tr><td align="left"> + values() : Collection&lt;V&gt; </td></tr>
			<tr><td align="left"> + equals(arg0 : Object) : boolean </td></tr>
			<tr><td align="left"> + hashCode() : int </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
}

